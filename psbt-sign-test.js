const ecpair = require("ecpair");
const bitcoin = require("bitcoinjs-lib");
const bip39 = require("bip39");
const ecc = require("tiny-secp256k1");
const { BIP32Factory } = require("bip32");

const { ECPairInterface, ECPairFactory } = ecpair;
const bip32 = BIP32Factory(ecc);
const ECPair = ECPairFactory(ecc);

const network = bitcoin.networks.testnet;

const mnemonics = [
  "goddess trash permit guitar swing act promote second olympic hat network inject",
  "general enrich pause prosper brother razor result glance deer three royal clock",
];

const unsignedPsbt = `70736274ff0100c40200000003c905c9de21546c320ac0737acdedf68f11d742f304d382bed979c857b6e447570100000000ffffffffe7d1c010a5fb9a91b1c55ea0d39c3dc3070fb9a8dd26665a54cfecc81ca0d0aa0100000000ffffffff2c661bfddf6717c35f7bc76546054059ebd49307e77bce35d0987995d535faa00000000000ffffffff021027000000000000160014aacc0466b21750191bff0e1760eabbb7b9155bacfe1700000000000017a91408fcf18065e1a413f32936d288e49a631bc190b38700000000000100b702000000000101313b0f202abcfa570a27fbce3849e32268c022eb4a1a14ff70265a49f55722c20000000000fdffffff024fcdec040000000017a9144fd3c010ad9fd067302364178ed5bf9f0753ebd387102700000000000017a91408fcf18065e1a413f32936d288e49a631bc190b387014059da83423e4ea8459be1369f1768869d88419bfb95fa1a29bd2b2aaacde827d76dd782ae68db8765fb8f887c13cd4465c8c8fefd5311382ce1c2bc93336084d4ae422c00010469522102d165d62e1abdf5707199042d74ba65797ed399b74a9d0338df9ac7a8480953ca2102899264eb97e256ce4e379831e7639d4234b8fbd47b91dbd9a74387d013c8c753210371642b2c758555d9666b4317f66859ab7f25e00c8a0e59531bb8656d5850689353ae000100e002000000000101c278467c6ff82a36089ca6cc5793067022a495b00836f77433a58e90863e5a0f0100000000fdffffff02e004d3040000000017a914bdef880bc2af8cf77aed94f52209fdbd7fd543ee87102700000000000017a914cd63911f0a0b673552dba5dd6afbe0adc1b646fa870247304402202de61242a710f25769d76fd86ebecc7f593d7ba28a7cc2133f9659e0c86132420220562746d00f904ff552d439b0be14c703f5d47da0183f04a79e410674504ed995012103c4a8f7531d6cc56e43a32e7e81fa185ad1e9a9ec94393a48edff6314ccffb48b90462c000104695221036cd690bb60c58c7de2dbd7d11545283e69f8ed57ce21a5cb15b1022187a1a62a2103293ca274de443e47a6584522d97f7db1857d8f63e824cfe1cf7a066bc4f5e4172102982f00ac214a561ad1bbfe8dc9f0920a4fb7e577bf38c6295d70b3887ebad6ad53ae000100dd020000000138a12d60b242b3b51a35a8e53dc05d83797ab367e5257d4d8954ba23ea363106000000006a47304402205a06c3817d32380f8edc5bd18e15b47d699214af747146bf8c3a4b502f3b40b202207ad43f55e4633ee33500d55cb8622d78d3a7d7236b02e0168663e872eed650e801210314a65bbac8e0c19c2c7cf437433b5674de7894acf7cd8bbcf749586ac163d424fdffffff02102700000000000017a9145cd60e52a05abd5becd60352b143301ee4f1996a87af1ced040000000017a9148d04b961317e9cb898c33419c9b4afdcb56627bb87ab422c00010469522103f804af9c5ff41a4122ed7b9aa59222557e461e829fefaa0422125a5730f05f242102bbafe47871f2644ebe2e5dbf953deeb375f0407f4a041345f341717f6ec82f842102ed651fef388f88ab624b87fbd52eda7f5140b84d995aa48414f814bb88b1384353ae000000`

let psbt = bitcoin.Psbt.fromHex(unsignedPsbt, { network })

for (const mnemonic of mnemonics) {
  const seed = bip39.mnemonicToSeedSync(mnemonic);
  const master = bip32.fromSeed(seed, network);
  const root = master.derivePath("m/49'/1'/0'/0/0");
  psbt.signInput(0, root)
  console.log(psbt.toHex())
  console.log()
}

psbt.finalizeAllInputs()
const hex = psbt.extractTransaction().toHex()
console.log(hex)
